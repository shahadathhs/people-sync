model PrivateCall {
  id String @id @default(uuid())

  conversationId String
  conversation   PrivateConversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  initiatorId String
  initiator   User   @relation(fields: [initiatorId], references: [id])

  type   CallType
  status CallStatus @default(INITIATED)

  startedAt DateTime  @default(now())
  endedAt   DateTime?

  participants PrivateCallParticipant[]

  createdAt DateTime @default(now())
}

model PrivateCallParticipant {
  id String @id @default(uuid())

  callId String
  call   PrivateCall @relation(fields: [callId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  status CallParticipantStatus @default(JOINED)

  joinedAt DateTime  @default(now())
  leftAt   DateTime?
}

enum CallType {
  AUDIO
  VIDEO
}

enum CallStatus {
  INITIATED
  ONGOING
  ENDED
  MISSED
}

enum CallParticipantStatus {
  JOINED
  LEFT
  MISSED
}
